// Fixed lead-loader.min.js - more robust config capture
(function() {
  let currentScript = document.currentScript;
  
  // Fallback: if currentScript is null, find our script by src
  if (!currentScript) {
    const scripts = document.querySelectorAll('script[src*="lead-loader"]');
    if (scripts.length > 0) {
      currentScript = scripts[scripts.length - 1]; // Get the last one (most recent)
    }
  }
  
  // Another fallback: find script with data-endpoint
  if (!currentScript) {
    const scriptsWithEndpoint = document.querySelectorAll('script[data-endpoint]');
    if (scriptsWithEndpoint.length > 0) {
      currentScript = scriptsWithEndpoint[scriptsWithEndpoint.length - 1];
    }
  }
  
  if (!currentScript) {
    console.error('lead-loader: could not find script element with configuration');
    return;
  }
  
  console.log('lead-loader: found script element:', currentScript);
  
  // Store config globally before loading async script
  window.__leadPixelConfig = {};
  
  // Copy all data attributes
  Array.from(currentScript.attributes).forEach(attr => {
    if (attr.name.startsWith('data-')) {
      const key = attr.name.replace('data-', '');
      window.__leadPixelConfig[key] = attr.value;
      console.log('lead-loader: captured', key, '=', attr.value);
    }
  });
  
  console.log('lead-loader: final config:', window.__leadPixelConfig);
  
  // Validate we have an endpoint
  if (!window.__leadPixelConfig.endpoint) {
    console.error('lead-loader: no endpoint found in configuration');
    return;
  }
  
  // Load the main script
  const script = document.createElement('script');
  script.src = 'https://raw.githubusercontent.com/cmwjr92/Ad-tracking-lead-pixel/main/lead-catcher.js';
  script.defer = true;
  script.onload = () => console.log('lead-loader: lead-catcher.js loaded successfully');
  script.onerror = () => console.error('lead-loader: failed to load lead-catcher.js');
  document.head.appendChild(script);
})();
